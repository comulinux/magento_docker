version: "3.4"
services:
    mysql:
      image: mysql:5.7
      container_name: magento2-mysql
      working_dir: /application
      volumes:
        - "databaseVolume:/var/lib/mysql"
      environment:
        - MYSQL_ROOT_PASSWORD=db_root
        - MYSQL_DATABASE=magento
        - MYSQL_USER=db_user
        - MYSQL_PASSWORD=db_user_pass
      ports:
        - "3306:3306"

    webserver:
      image: nginx:alpine
      container_name: magento2-webserver
      working_dir: /application
      volumes:
          - ${WORKINGDIR}/.:/application
          - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
       - "80:80"

    php-fpm:
      build: php-fpm
      container_name: magento2-php-fpm
      working_dir: /application
      volumes:
        - ${WORKINGDIR}/.:/application
        - ./php-fpm/php-ini-overrides.ini:/etc/php/7.0/fpm/conf.d/99-overrides.ini
        - ./php-fpm/xdebug.ini:/etc/php/7.0/mods-available/xdebug.ini
      environment:
        XDEBUG_CONFIG: remote_host={{172.17.0.1}}
        PHP_IDE_CONFIG: serverName=docker

    mailhog:
      image: mailhog/mailhog
      container_name: magento2-mailhog
      expose:
        - 25
        - 8025
      ports:
        - "25:25"
        - "8025:8025"

    redis:
      image: redis:4.0.5-alpine
      command: ["redis-server", "--appendonly", "yes"]
      hostname: redis
      container_name: magento2-redis
      networks:
        - redis-net
      volumes:
        - redis-data:/data

volumes:
  databaseVolume:
    name: database-${COMPOSE_PROJECT_NAME}
    external: false
  redis-data:

networks:
  redis-net: